// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model UserTemplate {
  id            String   @id @default(cuid())
  name          String   // 模板名称
  description   String?  // 模板介绍
  overwatchCode String   @db.Text // 守望先锋代码
  creatorIp     String   // 创建者IP地址
  likesCount    Int      @default(0) // 点赞数量
  isApproved    Boolean  @default(false) // 审核状态，默认未审核
  categoryId    String?  // 分类ID，可为空（老数据兼容）
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // 关联关系
  likes         TemplateLike[]
  category      TemplateCategory? @relation(fields: [categoryId], references: [id])
  
  @@map("user_templates")
}

model TemplateLike {
  id         String       @id @default(cuid())
  templateId String
  userIp     String       // 用户IP地址
  createdAt  DateTime     @default(now())
  
  template   UserTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)
  
  @@unique([templateId, userIp]) // 防止同一IP重复点赞
  @@map("template_likes")
}

model TemplateCategory {
  id          String   @id @default(cuid())
  name        String   // 分类名称
  parentId    String?  // 父分类ID，一级分类为null
  displayOrder Int     @default(0) // 显示顺序
  isActive    Boolean  @default(true) // 是否启用
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 关联关系
  parent      TemplateCategory? @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children    TemplateCategory[] @relation("CategoryHierarchy")
  templates   UserTemplate[]
  
  @@map("template_categories")
}

model TextureContribution {
  id              String   @id @default(cuid())
  txcCode         String   // TXC代码
  chineseName     String   // 中文名称
  canDisplayInGame Boolean // 是否在游戏中能显示
  contributorIp   String   // 贡献者IP地址
  isApproved      Boolean  @default(false) // 审核状态，默认未审核
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("texture_contributions")
}

model CardExchange {
  id                      String   @id @default(cuid())
  shareToken              String   @unique // 分享令牌
  actionType              String   // 操作类型: ask, exchange, give
  actionInitiatorAccount  String   // 发起者账号名
  actionInitiatorCardId   Int      // 发起者卡片ID
  actionAcceptCardId      Int      // 接受者卡片ID (exchange时使用)
  status                  String   @default("active") // 状态: active, claimed, expired
  creatorIp               String   // 发布者IP地址
  originalUrl             String   @db.Text // 原始链接
  lastCheckedAt           DateTime @default(now()) // 最后检查时间
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  
  @@map("card_exchanges")
}

model TeammateMatchRecord {
  id          String   @id @default(cuid())
  roomId      String   // 房间ID
  region      String   // 服务器区域 (cn/global)
  playerCount Int      // 匹配时的玩家数量
  playerTags  String   @db.Text // 玩家战网标签，JSON格式存储
  matchedAt   DateTime @default(now()) // 匹配成功时间
  createdAt   DateTime @default(now())
  
  @@map("teammate_match_records")
}